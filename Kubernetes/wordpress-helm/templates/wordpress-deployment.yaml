apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.wordpress.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.wordpress.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.wordpress.name }}
    spec:
      containers:
      - name: wordpress
        image: {{ .Values.wordpress.image }}
        volumeMounts:
          - name: {{ .Values.wordpress.volume.name }}
            mountPath: {{ .Values.wordpress.volume.mountPath }}
        env:
        - name: WORDPRESS_DB_HOST
          valueFrom:
            configMapKeyRef:
              name: wordpress-config
              key: WORDPRESS_DB_HOST
        - name: WORDPRESS_DB_USER
          value: "{{ .Values.wordpress.env.WORDPRESS_DB_USER }}"
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: MYSQL_ROOT_PASSWORD
        - name: WORDPRESS_DB_NAME
          valueFrom:
            configMapKeyRef:
              name: wordpress-config
              key: WORDPRESS_DB_NAME
        ports:
        - containerPort: {{ .Values.wordpress.service.port }}
          name: wordpress

      - name: mysql-client
        image: {{ .Values.wordpress.mysqlClient.image }}
        command: ["sh", "-c", "apt update && apt install -y default-mysql-client && tail -f /dev/null"]
      volumes:
        - name: wordpress-data
          persistentVolumeClaim:
            claimName: {{ .Values.wordpress.volume.persistentVolumeClaim.claimName }}
