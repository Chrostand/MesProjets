apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: wordpress
  # labels so that we can bind a Service to this Pod
  labels:
    app: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  serviceName: "mysql"
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: database
        image: mysql:5.7
        resources:
          limits:
            memory: 512Mi
          requests:
            memory: 256Mi
        args:
          # We need this to prevent mysql from throwing up -- our DO volume will be mounted here
          - "--ignore-db-dir=lost+found"
        # A nice way to get a whole bunch of values from a k8s secret into a container's  environment variables
        envFrom:
          - secretRef:
              name: mysql-secret
        ## The old way (one for each value):
        # env:
        # # Use a secret, avoid having plaintext passwords all over your configs
        # - name: MYSQL_ROOT_PASSWORD
        #   valueFrom:
        #     secretKeyRef:
        #       name: mysql-secret
        #       key: MYSQL_ROOT_PASSWORD
        livenessProbe:
          tcpSocket:
            port: 3306
          initialDelaySeconds: 60  # Augmenter le temps d'attente avant la première vérification
          periodSeconds: 10        # Vérification toutes les 10 secondes
          failureThreshold: 5      # Nombre d'échecs avant redémarrage
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "mysqladmin ping -h 127.0.0.1 -uroot -p$MYSQL_ROOT_PASSWORD"
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 5
        ports:
          - containerPort: 3306
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql-volume